<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="First Test"
           tests="3"
           failures="1"
           errors="0"
           skipped="2"
           time="0.001">
  <properties />
            <testcase name="beforeTest" time="0.000" classname="test.test_003">
                <failure type="java.lang.IllegalStateException"
                  message="The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver. The latest version can be downloaded from https://github.com/mozilla/geckodriver/releases"
              >
<![CDATA[java.lang.IllegalStateException: The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver. The latest version can be downloaded from https://github.com/mozilla/geckodriver/releases
  com.google.common.base.Preconditions.checkState(Preconditions.java:199)
  org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:109)
  org.openqa.selenium.firefox.GeckoDriverService.access$000(GeckoDriverService.java:37)
  org.openqa.selenium.firefox.GeckoDriverService$Builder.findDefaultExecutable(GeckoDriverService.java:95)
  org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:296)
  org.openqa.selenium.firefox.FirefoxDriver.createCommandExecutor(FirefoxDriver.java:277)
  org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:247)
  org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:242)
  org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:238)
  org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:127)
  test.test_003.beforeTest(test_003.java:16)
  sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  java.lang.reflect.Method.invoke(Method.java:498)
  org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
  org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
  org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
  org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
  org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
  org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
  org.testng.TestRunner.privateRun(TestRunner.java:782)
  org.testng.TestRunner.run(TestRunner.java:632)
  org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
  org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
  org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
  org.testng.SuiteRunner.run(SuiteRunner.java:268)
  org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
  org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
  org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
  org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
  org.testng.TestNG.run(TestNG.java:1064)
  org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
  org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
  org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
      </failure>

          </testcase>
  
            <testcase name="afterTest" time="0.0" classname="test.test_003">
          <skipped />
    </testcase>
            <testcase name="TC_001_Login" time="0.0" classname="test.test_003">
          <skipped />
    </testcase>
  
  
</testsuite>
